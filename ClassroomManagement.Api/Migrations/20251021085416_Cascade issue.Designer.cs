// <auto-generated />
using System;
using ClassroomManagement.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassroomManagement.Api.Migrations
{
    [DbContext(typeof(ClassroomManagementDbContext))]
    [Migration("20251021085416_Cascade issue")]
    partial class Cascadeissue
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassroomManagement.Api.Models.ClassSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassroomId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassSchedule");
                });

            modelBuilder.Entity("ClassroomManagement.Api.Models.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsLab")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Classrooms");
                });

            modelBuilder.Entity("ClassroomManagement.Api.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Credit")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("Term")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 501,
                            Credit = 3,
                            DepartmentId = 1001,
                            Level = 3,
                            Name = "Data Structures",
                            TeacherId = 2001,
                            Term = 1
                        },
                        new
                        {
                            Id = 502,
                            Credit = 3,
                            DepartmentId = 1001,
                            Level = 3,
                            Name = "Algorithms",
                            TeacherId = 2001,
                            Term = 2
                        },
                        new
                        {
                            Id = 503,
                            Credit = 3,
                            DepartmentId = 1002,
                            Level = 3,
                            Name = "Circuit Analysis",
                            TeacherId = 2002,
                            Term = 1
                        },
                        new
                        {
                            Id = 504,
                            Credit = 3,
                            DepartmentId = 1002,
                            Level = 3,
                            Name = "Electromagnetics",
                            TeacherId = 2003,
                            Term = 2
                        });
                });

            modelBuilder.Entity("ClassroomManagement.Api.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 2001,
                            Designation = "Assistant Professor",
                            Name = "Alice Smith"
                        },
                        new
                        {
                            Id = 2002,
                            Designation = "Associate Professor",
                            Name = "Bob Johnson"
                        },
                        new
                        {
                            Id = 2003,
                            Designation = "Professor",
                            Name = "Carol Williams"
                        });
                });

            modelBuilder.Entity("ClassroomManagement.Api.Models.ClassSchedule", b =>
                {
                    b.HasOne("ClassroomManagement.Api.Models.Classroom", "Classroom")
                        .WithMany("ClassSchedules")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassroomManagement.Api.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassroomManagement.Api.Models.Teacher", "Teacher")
                        .WithMany("Classes")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Classroom");

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ClassroomManagement.Api.Models.Course", b =>
                {
                    b.HasOne("ClassroomManagement.Api.Models.Teacher", "Teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TeacherId");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ClassroomManagement.Api.Models.Classroom", b =>
                {
                    b.Navigation("ClassSchedules");
                });

            modelBuilder.Entity("ClassroomManagement.Api.Models.Teacher", b =>
                {
                    b.Navigation("Classes");

                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
